// <auto-generated />
using System;
using DoAnWebThiTracNghiem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoAnWebThiTracNghiem.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250429211701_FixStudentAnswersMapping")]
    partial class FixStudentAnswersMapping
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.ClassTn", b =>
                {
                    b.Property<int>("Class_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Class_Id"));

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorUser_Id")
                        .HasColumnType("int");

                    b.Property<string>("InviteCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Class_Id");

                    b.HasIndex("CreatorUser_Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("ClassTn");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Exam", b =>
                {
                    b.Property<int>("Exam_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Exam_ID"));

                    b.Property<int>("CreatorUser_Id")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Exam_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exam_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<double>("PassScore")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Subject_ID")
                        .HasColumnType("int");

                    b.Property<int>("TotalQuestions")
                        .HasColumnType("int");

                    b.HasKey("Exam_ID");

                    b.HasIndex("CreatorUser_Id");

                    b.HasIndex("Subject_ID");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Exam_Class", b =>
                {
                    b.Property<int>("EC_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EC_ID"));

                    b.Property<DateTime>("AssignedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ClassTNClass_Id")
                        .HasColumnType("int");

                    b.Property<int>("Exam_ID")
                        .HasColumnType("int");

                    b.HasKey("EC_ID");

                    b.HasIndex("ClassTNClass_Id");

                    b.HasIndex("Exam_ID");

                    b.ToTable("ClassExams");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Exam_Question", b =>
                {
                    b.Property<int>("EQ_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EQ_ID"));

                    b.Property<int>("Exam_ID")
                        .HasColumnType("int");

                    b.Property<decimal>("Points")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Question_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Question_Order")
                        .HasColumnType("int");

                    b.HasKey("EQ_ID");

                    b.HasIndex("Exam_ID");

                    b.HasIndex("Question_ID");

                    b.ToTable("ExamQuestions");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Exam_Result", b =>
                {
                    b.Property<int>("Result_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Result_ID"));

                    b.Property<int>("CorrectAnswers")
                        .HasColumnType("int");

                    b.Property<DateTime>("End_Time")
                        .HasColumnType("datetime2");

                    b.Property<int>("Exam_ID")
                        .HasColumnType("int");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Start_Time")
                        .HasColumnType("datetime2");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.Property<int>("WrongAnswers")
                        .HasColumnType("int");

                    b.HasKey("Result_ID");

                    b.HasIndex("Exam_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("ExamResult");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Level", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LevelName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Notification", b =>
                {
                    b.Property<int>("Announcement_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Announcement_ID"));

                    b.Property<int>("ClassTNClass_Id")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatorUser_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Announcement_ID");

                    b.HasIndex("ClassTNClass_Id");

                    b.HasIndex("CreatorUser_Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Question", b =>
                {
                    b.Property<int>("Question_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Question_ID"));

                    b.Property<string>("Correct_Option")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorUser_Id")
                        .HasColumnType("int");

                    b.Property<int>("Level_ID")
                        .HasColumnType("int");

                    b.Property<string>("Option_A")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option_B")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option_C")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option_D")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question_Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Subject_ID")
                        .HasColumnType("int");

                    b.HasKey("Question_ID");

                    b.HasIndex("CreatorUser_Id");

                    b.HasIndex("Level_ID");

                    b.HasIndex("Subject_ID");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Student_Answers", b =>
                {
                    b.Property<int>("SA_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SA_ID"));

                    b.Property<bool>("Is_Correct")
                        .HasColumnType("bit");

                    b.Property<int>("Question_ID")
                        .HasColumnType("int");

                    b.Property<int>("Result_ID1")
                        .HasColumnType("int");

                    b.Property<string>("Selected_Option")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SA_ID");

                    b.HasIndex("Question_ID");

                    b.HasIndex("Result_ID1");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Student_Class", b =>
                {
                    b.Property<int>("SC_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SC_ID"));

                    b.Property<int>("Class_ID")
                        .HasColumnType("int");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("SC_ID");

                    b.HasIndex("Class_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("ClassStudents");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Subject", b =>
                {
                    b.Property<int>("Subject_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Subject_Id"));

                    b.Property<int>("CreatorUser_Id")
                        .HasColumnType("int");

                    b.Property<string>("Subject_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Subject_Id");

                    b.HasIndex("CreatorUser_Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Users", b =>
                {
                    b.Property<int>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("User_Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.ClassTn", b =>
                {
                    b.HasOne("DoAnWebThiTracNghiem.Models.Users", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorUser_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnWebThiTracNghiem.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Exam", b =>
                {
                    b.HasOne("DoAnWebThiTracNghiem.Models.Users", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorUser_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnWebThiTracNghiem.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("Subject_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Exam_Class", b =>
                {
                    b.HasOne("DoAnWebThiTracNghiem.Models.ClassTn", "ClassTN")
                        .WithMany("Exam_Classes")
                        .HasForeignKey("ClassTNClass_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnWebThiTracNghiem.Models.Exam", "Exam")
                        .WithMany("Exam_Classes")
                        .HasForeignKey("Exam_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassTN");

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Exam_Question", b =>
                {
                    b.HasOne("DoAnWebThiTracNghiem.Models.Exam", "Exam")
                        .WithMany("Exam_Questions")
                        .HasForeignKey("Exam_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnWebThiTracNghiem.Models.Question", "Question")
                        .WithMany("Exam_Questions")
                        .HasForeignKey("Question_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Exam_Result", b =>
                {
                    b.HasOne("DoAnWebThiTracNghiem.Models.Exam", "Exam")
                        .WithMany("exam_Results")
                        .HasForeignKey("Exam_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnWebThiTracNghiem.Models.Users", "User")
                        .WithMany()
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Notification", b =>
                {
                    b.HasOne("DoAnWebThiTracNghiem.Models.ClassTn", "ClassTN")
                        .WithMany()
                        .HasForeignKey("ClassTNClass_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnWebThiTracNghiem.Models.Users", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorUser_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassTN");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Question", b =>
                {
                    b.HasOne("DoAnWebThiTracNghiem.Models.Users", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorUser_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnWebThiTracNghiem.Models.Level", "Level")
                        .WithMany()
                        .HasForeignKey("Level_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnWebThiTracNghiem.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("Subject_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("Level");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Student_Answers", b =>
                {
                    b.HasOne("DoAnWebThiTracNghiem.Models.Question", "Question")
                        .WithMany("Student_Answers")
                        .HasForeignKey("Question_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnWebThiTracNghiem.Models.Exam_Result", "exam_Result")
                        .WithMany("Student_Answers")
                        .HasForeignKey("Result_ID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("exam_Result");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Student_Class", b =>
                {
                    b.HasOne("DoAnWebThiTracNghiem.Models.ClassTn", "ClassTn")
                        .WithMany("Student_Classes")
                        .HasForeignKey("Class_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnWebThiTracNghiem.Models.Users", "User")
                        .WithMany("Student_Class")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassTn");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Subject", b =>
                {
                    b.HasOne("DoAnWebThiTracNghiem.Models.Users", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorUser_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Users", b =>
                {
                    b.HasOne("DoAnWebThiTracNghiem.Models.Roles", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.ClassTn", b =>
                {
                    b.Navigation("Exam_Classes");

                    b.Navigation("Student_Classes");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Exam", b =>
                {
                    b.Navigation("Exam_Classes");

                    b.Navigation("Exam_Questions");

                    b.Navigation("exam_Results");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Exam_Result", b =>
                {
                    b.Navigation("Student_Answers");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Question", b =>
                {
                    b.Navigation("Exam_Questions");

                    b.Navigation("Student_Answers");
                });

            modelBuilder.Entity("DoAnWebThiTracNghiem.Models.Users", b =>
                {
                    b.Navigation("Student_Class");
                });
#pragma warning restore 612, 618
        }
    }
}
