@model PagedResult<DoAnWebThiTracNghiem.Models.ClassTn>
@using DoAnWebThiTracNghiem.ViewModel
@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_layout.cshtml";
}

<div class="content-section">
    <div class="rounded-xl bg-white p-4 shadow-lg sm:p-6">
        <div class="mb-6 flex flex-col items-start justify-between border-b pb-4 sm:flex-row sm:items-center">
            <h3 class="mb-3 text-lg font-semibold text-gray-700 sm:text-xl sm:mb-0">Danh sách lớp học</h3>
            <form method="get" class="mb-4 flex items-center space-x-2">
                <input type="text" name="search" value="@Model.Search" placeholder="Tìm kiếm tên lớp..." class="rounded border-gray-300 px-3 py-2 focus:border-blue-500 focus:ring-blue-500" />
                <button type="submit" class="rounded bg-blue-600 px-4 py-2 text-white hover:bg-blue-700">Tìm kiếm</button>
            </form>
        </div>
        <div class="mb-6 flex flex-col items-start justify-between pb-4 sm:flex-row sm:items-center">
            <a asp-action="Create"
               class="flex w-full items-center justify-center space-x-2 rounded-lg bg-blue-600 px-5 py-2.5 font-semibold text-white shadow transition duration-200 ease-in-out hover:bg-blue-700 hover:shadow-md sm:w-auto">
                <svg class="h-4 w-4" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z" />
                </svg>
                <span>Thêm Lớp Học</span>
            </a>
        </div>
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-4 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase">Tên lớp</th>
                        <th class="px-4 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase">Mã mời</th>
                        <th class="px-4 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase">Môn học</th>
                        <th class="px-4 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase">Người tạo</th>
                        <th class="px-4 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase">Ngày tạo</th>
                        <th class="px-4 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase">Trạng thái</th>
                        <th class="px-4 py-3 text-center text-xs font-medium tracking-wider text-gray-500 uppercase">Hành động</th>
                    </tr>
                </thead>
                <tbody class="divide-y divide-gray-200 bg-white">
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td class="px-4 py-3 text-sm font-medium whitespace-nowrap text-gray-800">@item.ClassName</td>
                            <td class="px-4 py-3 text-sm whitespace-nowrap text-gray-600">@item.InviteCode</td>
                            <td class="px-4 py-3 text-sm whitespace-nowrap text-gray-600">@item.Subject?.Subject_Name</td>
                            <td class="px-4 py-3 text-sm whitespace-nowrap text-gray-600">@item.Creator?.FullName</td>
                            <td class="px-4 py-3 text-sm whitespace-nowrap text-gray-600">@item.CreatedAt.ToString("dd/MM/yyyy")</td>
                            <td class="px-4 py-3 whitespace-nowrap">
                                @if (item.IsActive)
                                {
                                    <span class="inline-flex rounded-full bg-green-100 px-2 py-1 text-xs leading-5 font-semibold text-green-800">Đang mở</span>
                                }
                                else
                                {
                                    <span class="inline-flex rounded-full bg-gray-200 px-2 py-1 text-xs leading-5 font-semibold text-gray-600">Đã đóng</span>
                                }
                            </td>
                            <td class="space-x-2 px-4 py-3 text-center text-sm font-medium whitespace-nowrap">
                                <button type="button" onclick="openEditClassModal(@item.Class_Id)" class="p-1 text-blue-600 hover:text-blue-800" title="Sửa">
                                    <svg class="inline h-4 w-4" fill="currentColor" viewBox="0 0 24 24">
                                        <path d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.996.996 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z" />
                                    </svg>
                                </button>
                                <button type="button" onclick="deleteClass(@item.Class_Id)" class="p-1 text-red-600 hover:text-red-800" title="Xóa">
                                    <svg class="inline h-4 w-4" fill="currentColor" viewBox="0 0 24 24">
                                        <path d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z" />
                                    </svg>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>


        <!-- Pagination -->
        <div class="mt-6 flex flex-col items-center justify-between space-y-3 sm:flex-row sm:space-y-0">
            <span class="text-sm text-gray-600">
                Hiển thị trang @Model.PageNumber trên tổng @Model.TotalPages, tổng @Model.TotalItems lớp học
            </span>
            <div class="flex space-x-1">
                <a asp-action="Index" asp-route-page="@(Model.PageNumber - 1)" asp-route-search="@Model.Search" class="rounded-md border border-gray-300 bg-white px-3 py-1 text-sm text-gray-600 hover:bg-gray-50 @(Model.PageNumber == 1 ? "pointer-events-none opacity-50" : "")">Trước</a>
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <a asp-action="Index" asp-route-page="@i" asp-route-search="@Model.Search"
                       class="rounded-md border px-3 py-1 text-sm @(i == Model.PageNumber ? "bg-blue-600 border-blue-600 text-white hover:bg-blue-700" : "bg-white border-gray-300 text-gray-600 hover:bg-gray-50")">
                        @i
                    </a>
                }
                <a asp-action="Index" asp-route-page="@(Model.PageNumber + 1)" asp-route-search="@Model.Search" class="rounded-md border border-gray-300 bg-white px-3 py-1 text-sm text-gray-600 hover:bg-gray-50 @(Model.PageNumber == Model.TotalPages ? "pointer-events-none opacity-50" : "")">Sau</a>
            </div>
        </div>
        <div id="editClassModal" class="bg-opacity-40 fixed inset-0 z-50 flex hidden items-center justify-center">
            <div class="relative w-full max-w-md rounded-xl bg-white p-6 shadow-lg">
                <button type="button" onclick="closeEditClassModal()" class="absolute top-2 right-2 text-gray-400 hover:text-gray-700">
                    <!-- SVG close -->
                </button>
                <form id="editClassForm">
                    <input type="hidden" name="Class_Id" id="editClassId" />
                    <div class="mb-3">
                        <label class="block text-sm font-medium text-gray-700">Tên lớp</label>
                        <input type="text" name="ClassName" id="editClassName" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500" required />
                    </div>
                    <div class="mb-3">
                        <label class="block text-sm font-medium text-gray-700">Môn học</label>
                        <select name="SubjectId" id="editSubjectId" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500" required>
                            <option value="">-- Chọn môn học --</option>
                            <!-- Options sẽ được render bằng JS -->
                        </select>

                    </div>
                    <div class="flex justify-end">
                        <button type="button" onclick="closeEditClassModal()" class="mr-2 rounded bg-gray-200 px-4 py-2 text-gray-700 hover:bg-gray-300">Hủy</button>
                        <button type="submit" class="rounded bg-blue-600 px-4 py-2 font-semibold text-white hover:bg-blue-700">Lưu</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<script>


    function openEditClassModal(classId) {
       fetch(`/Admin/ClassTn/GetClass?id=${classId}`)
            .then(res => res.json())
            .then(cls => {
                document.getElementById('editClassId').value = cls.class_Id;
                document.getElementById('editClassName').value = cls.className || '';

                // Lấy danh sách môn học của người tạo lớp
                fetch(`/Admin/ClassTn/GetSubjectsForClass?classId=${classId}`)
    .then(res => {
        if (!res.ok) return [];
        return res.json();
    })
                    .then(subjects => {
                        const select = document.getElementById('editSubjectId');
                        select.innerHTML = '<option value="">-- Chọn môn học --</option>';
                        subjects.forEach(sub => {
                            const option = document.createElement('option');
                            option.value = sub.subject_Id;
                            option.text = sub.subject_Name;
                            if (sub.subject_Id === cls.subjectId) option.selected = true;
                            select.appendChild(option);
                        });
                    });
                document.getElementById('editClassModal').classList.remove('hidden');
            });
    }

    function closeEditClassModal() {
        document.getElementById('editClassModal').classList.add('hidden');
    }
    document.getElementById('editClassForm').addEventListener('submit', function (e) {
        e.preventDefault();
        const form = e.target;
        const formData = new FormData(form);
        fetch('/Admin/ClassTn/EditInline', {
            method: 'POST',
            body: formData
        }).then(res => {
            if (res.ok) location.reload();
            else alert('Có lỗi xảy ra khi cập nhật!');
        });
    });
    function deleteClass(classId) {
        if (confirm('Bạn có chắc chắn muốn xóa lớp học này?')) {
            fetch(`/Admin/ClassTn/DeleteInline?id=${classId}`, { method: 'POST' })
                .then(res => {
                    if (res.ok) location.reload();
                    else alert('Có lỗi xảy ra khi xóa!');
                });
        }
    }

</script>
