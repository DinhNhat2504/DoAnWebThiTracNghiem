@model DoAnWebThiTracNghiem.ViewModel.StudentExamFilterViewModel
@{
    ViewData["Title"] = "Danh sách lớp học";
    Layout = "~/Areas/Student/Views/Shared/_Layout.cshtml";
    var examResults = ViewData["ExamResults"] as List<DoAnWebThiTracNghiem.Models.Exam_Result>;
    var studentId = (int)ViewData["UserId"];
}

<!-- Thông báo -->
@if (TempData["ErrorMessage"] != null)
{
    <div class="mb-4 rounded border border-red-400 bg-red-100 p-4 text-red-700">
        @TempData["ErrorMessage"]
    </div>
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="mb-4 rounded border border-green-400 bg-green-100 p-4 text-green-700">
        @TempData["SuccessMessage"]
    </div>
}
<div class="mb-4 flex flex-col items-center gap-4 sm:flex-row sm:justify-between">
    <h1 class="text-2xl font-bold text-blue-800">Danh sách lớp học của bạn

    </h1>
</div>
<section class="mb-8">
    <form method="get" class="mb-6 flex flex-col gap-2 md:flex-row md:items-end md:gap-4">
        <input name="search" value="@Model.Search" placeholder="Tìm kiếm bài thi..." class="w-full rounded border px-3 py-2 md:w-64" />
        <select name="status" class="rounded border px-3 py-2">
            <option value="all" selected=@(Model.Status == "all" ? "selected" : null)>Tất cả</option>
            <option value="done" selected=@(Model.Status == "done" ? "selected" : null)>Đã làm</option>
            <option value="waiting" selected=@(Model.Status == "waiting" ? "selected" : null)>Chờ thi</option>
            <option value="expired" selected=@(Model.Status == "expired" ? "selected" : null)>Hết hạn</option>
        </select>
        <input type="date" name="from" value="@(Model.FromDate?.ToString("yyyy-MM-dd"))" class="rounded border px-3 py-2" />
        <input type="date" name="to" value="@(Model.ToDate?.ToString("yyyy-MM-dd"))" class="rounded border px-3 py-2" />
        <button type="submit" class="rounded bg-blue-500 px-4 py-2 text-white hover:bg-blue-700">Lọc</button>
    </form>

    <div class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3">
        @if (Model.Exams != null && Model.Exams.Count > 0)
        {
            foreach (var item in Model.Exams)
            {
                var exam = item.Exam;
                var className = item.ClassName;
                var now = TimeZoneInfo.ConvertTimeFromUtc(DateTime.UtcNow, TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time"));
                var hasTakenExam = examResults != null && examResults.Any(r => r.Exam_ID == exam.Exam_ID && r.User_ID == studentId);
                <div class="rounded-lg border p-4 shadow-md">
                    <h3 class="mb-2 text-lg font-bold text-purple-800">@exam.Exam_Name</h3>
                    <p class="text-gray-700">Lớp học: @className</p>
                    <p class="text-gray-700">Thời gian làm bài: @exam.Duration phút</p>
                    <p class="text-gray-700">Ngày thi: @exam.Exam_Date.ToString("dd/MM/yyyy")</p>
                    <p class="text-gray-700">Thời gian bắt đầu: @exam.StartTime.ToString("HH:mm")</p>
                    <p class="text-gray-700">Thời gian kết thúc: @exam.EndTime.ToString("HH:mm")</p>
                    @if (hasTakenExam)
                    {
                        <a href="@Url.Action("ViewResult", "StudentTakeExam", new { area = "Student", examId = exam.Exam_ID })"
                           class="mt-4 block w-full rounded bg-blue-500 px-4 py-2 text-center text-white hover:bg-blue-600">
                            Xem kết quả
                        </a>
                    }
                    else if (now.Date > exam.Exam_Date || (now.Date == exam.Exam_Date && now > exam.EndTime))
                    {
                        <button class="mt-4 block w-full cursor-not-allowed rounded bg-gray-500 px-4 py-2 text-center text-white">
                            Hết hạn làm bài
                        </button>
                    }
                    else if (now.Date < exam.Exam_Date || (now.Date == exam.Exam_Date && now < exam.StartTime))
                    {
                        <button class="mt-4 block w-full rounded bg-yellow-500 px-4 py-2 text-center text-white hover:bg-yellow-600">
                            Chờ thi
                        </button>
                    }
                    else
                    {
                        <a href="@Url.Action("TakeExam", "StudentTakeExam", new { area = "Student", examId = exam.Exam_ID })"
                           class="mt-4 block w-full rounded bg-green-500 px-4 py-2 text-center text-white hover:bg-green-600">
                            Làm bài
                        </a>
                    }
                </div>
            }
        }
        else
        {
            <div class="col-span-3 text-center text-gray-500">Không có bài thi phù hợp.</div>
        }
    </div>
</section>

