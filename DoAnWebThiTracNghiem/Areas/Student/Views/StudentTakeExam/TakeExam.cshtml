@model DoAnWebThiTracNghiem.Models.Exam
@{
    ViewData["Title"] = "TakeExam";
    // Layout = "~/Views/Shared/_Layout.cshtml";
    var questions = ViewData["Questions"] as List<DoAnWebThiTracNghiem.Models.Exam_Question>;
    var remainingTime = ViewData["RemainingTime"] as double? ?? 0;
}

<header class="bg-indigo-600 p-4 text-white shadow-md">
    <div class="container mx-auto flex flex-col items-center justify-between sm:flex-row">
        <div>
            <h1 class="text-xl font-bold">@Model.Exam_Name</h1>
            <p class="text-sm">Thời gian: @Model.Duration phút | Số câu: @Model.TotalQuestions )</p>
        </div>
        <div class="mt-2 text-sm sm:mt-0">
            <p>Thời gian còn lại: <span id="countdown-timer">00:00</span></p>
        </div>
    </div>
</header>

<div class="container mx-auto flex flex-1 flex-col gap-6 p-6 md:flex-row">
    <div class="md:w-3/4">
        <form id="examForm" asp-action="SubmitExam" asp-controller="StudentTakeExam" method="post">
            <input type="hidden" name="examId" value="@Model.Exam_ID" />
            @if (questions != null)
            {
                int index = 1;
                foreach (var question in questions)
                {
                    <section id="question-@index" class="mb-6 rounded-lg bg-white p-6 shadow-md">
                        <h2 class="mb-4 text-lg font-semibold text-indigo-600">Câu @index/@Model.TotalQuestions: @question.Question.Question_Content</h2>
                        <div class="space-y-2">
                            @{
                                Console.WriteLine($"Rendering Question ID: {question.Question_ID}, Name: answer-{question.Question_ID}");
                            }
                            @if (question.Question.Options != null && question.Question.Options.Any())
                            {
                                foreach (var option in question.Question.Options)
                                {
                                    <label class="flex items-center">
                                        <input type="radio" id="option-@index-@option" name="answer-@question.Question_ID" value="@option" class="mr-2">
                                        @option
                                    </label>
                                }
                            }
                            else
                            {
                                <input type="text" id="answer-@index" name="answer-@question.Question_ID" class="w-full rounded-lg border p-2" placeholder="Nhập đáp án của bạn">
                            }
                        </div>
                    </section>
                    index++;
                }
            }
            else
            {
                <p class="text-red-500">Không có câu hỏi nào để hiển thị.</p>
            }
        </form>
    </div>

    <div class="md:w-1/4">
        <div class="sticky top-24 rounded-lg bg-white p-4 shadow-md">
            <h3 class="mb-4 text-lg font-semibold text-indigo-600">Điều hướng câu hỏi</h3>
            <div class="grid grid-cols-2 gap-2">
                @for (int i = 1; i <= (questions?.Count ?? 0); i++)
                {
                    <a href="#question-@i" class="rounded bg-indigo-100 px-3 py-1 text-center text-indigo-600 hover:bg-indigo-200">@i</a>
                }
            </div>
        </div>
    </div>
</div>

<footer class="bg-gray-200 p-4">
    <div class="container mx-auto text-center">
        <button type="submit" form="examForm" id="submit-button" class="rounded-lg bg-green-600 px-6 py-3 text-white hover:bg-green-700">Nộp bài</button>
    </div>
</footer>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        let remainingTime = @Html.Raw(Json.Serialize(ViewData["RemainingTime"]));
        console.log("Initial Remaining Time: " + remainingTime);

        if (isNaN(remainingTime) || remainingTime <= 0) {
            remainingTime = 40 * 60;
            console.log("RemainingTime không hợp lệ, đặt mặc định: " + remainingTime);
        }

        const timerElement = document.getElementById('countdown-timer');
        let isSubmitting = false;

        function updateTimer() {
            if (remainingTime <= 0 && !isSubmitting) {
                clearInterval(timerInterval);
                timerElement.textContent = 'Hết giờ!';
                alert('Thời gian làm bài đã hết!');
                isSubmitting = true;
                document.getElementById('examForm').submit();
                return;
            }

            let minutes = Math.floor(remainingTime / 60);
            let seconds = remainingTime % 60;
            minutes = minutes < 10 ? '0' + minutes : minutes;
            seconds = seconds < 10 ? '0' + seconds : seconds;
            timerElement.textContent = `${minutes}:${seconds}`;
            remainingTime--;
        }

        updateTimer();
        const timerInterval = setInterval(updateTimer, 1000);

        document.getElementById('examForm').addEventListener('submit', (event) => {
            const inputs = document.querySelectorAll('input[name^="answer-"]:checked, input[name^="answer-"][type="text"]');
            let hasAnswer = false;
            inputs.forEach(input => {
                if (input.type === 'radio' && input.checked) {
                    hasAnswer = true;
                } else if (input.type === 'text' && input.value.trim() !== '') {
                    hasAnswer = true;
                }
            });

            if (!hasAnswer && !isSubmitting) {
                event.preventDefault();
                alert('Vui lòng chọn ít nhất một câu trả lời trước khi nộp bài.');
            }
            isSubmitting = true;
        });
    });
</script>